parameters:
  - name: name
    type: string
    default: Executing database query

  - name: scriptType
    type: string
    default: inlineScript
    values:
      - inlineScript
      - scriptPath

  - name: scriptPath
    type: string
    default: ''

  - name: inlineScript
    type: string
    default: ''

  - name: azureSubscriptionName
    type: string

  - name: environment
    type: object
    default:
      key: dev
      name: Development

  - name: location
    type: object
    default:
      key: euw
      name: West Europe

steps:
  - task: AzureCLI@2
    displayName: Create Azure SQL firewall rule for build agent
    inputs:
      azureSubscription: ${{ parameters.azureSubscriptionName }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $ip = (Invoke-RestMethod http://ipinfo.io/json | Select-Object -exp ip)
        Write-Host "Creating Azure SQL firewall rule for ip $ip"
        az sql server firewall-rule create -g "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-rg" -s "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-sqls" -n "BuildAgent" --start-ip-address $ip --end-ip-address $ip

  - task: AzurePowerShell@5
    displayName: Test
    inputs:
      azureSubscription: ${{ parameters.azureSubscriptionName }}
      azurePowerShellVersion: LatestVersion
      pwsh: true
      scriptType: inlineScript
      inline: |
        Install-Module -Name SqlServer -Force -Scope CurrentUser
        $token = (Get-AzAccessToken -ResourceUrl https://database.windows.net).Token

        Invoke-SqlCmd -ServerInstance "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-sqls" -Database "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-sqld" -AccessToken "$token" -Query "SELECT 1" -Verbose

  - task: AzurePowerShell@5
    displayName: ${{ parameters.name }}
    inputs:
      azureSubscription: ${{ parameters.azureSubscriptionName }}
      azurePowerShellVersion: LatestVersion
      pwsh: true
      scriptType: inlineScript
      ${{ if eq(parameters.scriptType, 'inlineScript') }}:
        inline: |
          Install-Module -Name SqlServer -Force -Scope CurrentUser
          $token = (Get-AzAccessToken -ResourceUrl https://database.windows.net).Token

          Invoke-SqlCmd -ServerInstance "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-sqls" -Database "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-sqld" -AccessToken "$token" -Query "${{ parameters.inlineScript }}" -Verbose
      ${{ if eq(parameters.scriptType, 'scriptPath') }}:
        inline: |
          Install-Module -Name SqlServer -Force -Scope CurrentUser
          $token = (Get-AzAccessToken -ResourceUrl https://database.windows.net).Token

          Invoke-SqlCmd -ServerInstance "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-sqls" -Database "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-sqld" -AccessToken "$token" -InputFile "${{ parameters.scriptPath }}" -Verbose

  - task: AzureCLI@2
    displayName: Delete Azure SQL firewall rule for build agent
    condition: always()
    inputs:
      azureSubscription: ${{ parameters.azureSubscriptionName }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Write-Host "Removing Azure SQL firewall rule"
        az sql server firewall-rule delete -g "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-rg" -s "webapi-${{ parameters.environment.key }}-${{ parameters.location.key }}-sqls" -n "BuildAgent"
