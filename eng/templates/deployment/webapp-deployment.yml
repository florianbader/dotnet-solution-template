parameters:
  - name: azureSubscriptionName
    type: string

  - name: azureProductName
    type: string

  - name: environment
    type: object
    default:
      key: dev
      name: Development

  - name: location
    type: object
    default:
      key: euw
      name: West Europe

  - name: artifact
    type: object
    default:
      name: Artifact
      directory: $(Pipeline.Workspace)/build

jobs:
  - deployment: Deployment_WebApp_${{ parameters.environment.key }}_${{ parameters.location.key }}
    displayName: Deployment Web App ${{ parameters.environment.name }} ${{ parameters.location.name }}
    workspace:
      clean: all
    # use a different environment for resource triggers so we can have different approvals
    ${{ if eq(variables['Build.Reason'], 'ResourceTrigger') }}:
      environment: Deployment_PullRequest_${{ parameters.environment.key }}_${{ parameters.location.key }}
    ${{ if ne(variables['Build.Reason'], 'ResourceTrigger') }}:
      environment: Deployment_${{ parameters.environment.key }}_${{ parameters.location.key }}
    strategy:
      runOnce:
        deploy:
          steps:
            - task: ArchiveFiles@2
              displayName: Archive web app
              inputs:
                rootFolderOrFile: ${{ parameters.artifact.directory }}/${{ parameters.artifact.name }}
                includeRootFolder: false
                archiveType: zip
                archiveFile: ${{ parameters.artifact.directory }}/${{ parameters.artifact.name }}.zip
                replaceExistingArchive: true

            - task: AzureWebApp@1
              displayName: Deploy web app
              inputs:
                azureSubscription: ${{ parameters.azureSubscriptionName }}
                appType: webApp
                appName: ${{ parameters.azureProductName }}-${{ parameters.environment.key }}-${{ parameters.location.key }}-app
                resourceGroupName: ${{ parameters.azureProductName }}-${{ parameters.environment.key }}-${{ parameters.location.key }}-rg
                package: ${{ parameters.artifact.directory }}/${{ parameters.artifact.name }}.zip
                deploymentMethod: zipDeploy
                deployToSlotOrASE: false
